#include <stdio.h>
#include <ctype.h>
#include <string.h>
int is_reserved(char *word);
int is_operator(char *word);
int is_nums(char *word);
int main() {
FILE *fp;
char filename[100];
char ch;
char buffer[100];
int buf_idx = 0;
printf("Enter the name of the file: ");
scanf("%s", filename);
fp = fopen(filename, "r");
if (fp == NULL) {
printf("Error opening file\n");
return 1;
}
while ((ch = fgetc(fp)) != EOF) {
if(ch=='#'){
while(ch!='\n'){
buffer[buf_idx++]=ch;
ch=fgetc(fp);
}
printf("header file: %s\n",buffer);
}
if (isalnum(ch) || ch == '_') {
buffer[buf_idx++] = ch;
} else {
buffer[buf_idx] = '\0';
if (strlen(buffer) > 0) {
if (is_reserved(buffer)) {
printf("Reserved word: %s\n", buffer);
}
else {

if(is_nums(buffer)){

printf("Number: %s\n", buffer);
}
else{
printf("Identifier: %s\n", buffer);
}
}
}
buf_idx = 0;
if (is_operator(&ch)) {

printf("Operator: %c\n", ch);
} else if (ispunct(ch)) {

printf("Special character: %c\n", ch);
}
}
}fclose(fp);
return 0;
}
int is_nums(char *word) {
char *numbers[] = {"1","2","0","3","4","5","6","7","8","9"};
int num_reserved = sizeof(numbers) / sizeof(numbers[0]);
for (int i = 0; i < num_reserved; i++) {
if (strcmp(word, numbers[i]) == 0) {
return 1;}
}
return 0;
}
int is_reserved(char *word) {
char *reserved_words[] = {"auto", "break", "case", "char",
"const", "continue",
"default", "do", "double", "else", "enum", "extern",
"float", "for",
"goto", "if", "int", "long", "register", "return", "short",
"signed",
"sizeof", "static", "struct", "switch", "typedef", "union",
"unsigned",
"void", "volatile", "while","main"};
int num_reserved = sizeof(reserved_words) /
sizeof(reserved_words[0]);
for (int i = 0; i < num_reserved; i++) {
if (strcmp(word, reserved_words[i]) == 0) {
return 1;}
}
return 0;
}
int is_operator(char *word) {
char *operators[] = {"+", "-", "*", "/", "%", "++", "--", "==",
"!=", "<", ">", "<=", ">=",
"&&", "||", "!", "&", "|", "^", "~", "<<", ">>", "=", "+=",
"-=", "*=", "/=", "%=",
"<<=", ">>=", "&=", "^=", "|="
};
int num_operators = sizeof(operators) / sizeof(operators[0]);
for (int i = 0; i < num_operators; i++) {
if (strcmp(word, operators[i]) == 0) {
return 1;}
}
return 0;
}
